openapi: 3.0.1
info:
  title: Ielts platform System API
  version: "1.0"
  description: REST API for Ielts platform

tags:
  - name: Teacher

servers:
  - url: http://localhost:8080

paths:
  /api/v1/auth/login:
    post:
      tags:
        - Admin Api
      summary: "User Login"
      description: "Authenticates the user by email and password. Returns access and refresh tokens on success."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Login successful"
                data:
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                timestamp: "2025-06-10T00:12:33"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "Email must not be blank"
                  - "Password must not be blank"
                timestamp: "2025-06-10T00:22:14"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Unauthorized"
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '409':
          description: "Conflict (Account blocked or other business conflict)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Conflict"
                message: "Account is blocked"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Internal server error"
                message: "Server error"
                data: null
                timestamp: "2025-06-09T23:55:22"

  /api/v1/auth/activate:
    post:
      tags:
        - Teacher
      summary: Activate Account
      description: Activates a user account using an activation token and sets a new password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateRequest'
      responses:
        '200':
          description: Account successfully activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateResponse'
        '400':
          description: Validation error (missing or invalid token/password)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 400
                error: "Bad Request"
                message: "Password must be at least 8 characters"
                timestamp: "2025-06-09T23:59:00"
        '409':
          description: Invalid or expired token (conflict)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 409
                error: "Conflict"
                message: "Invalid token"
                timestamp: "2025-06-09T23:59:00"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 500
                error: "Internal Server Error"
                message: "Unexpected error"
                timestamp: "2025-06-09T23:59:00"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: User email
          example: user@example.com
        password:
          type: string
          description: User password
          example: 123456
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Success status
        message:
          type: string
          description: Response message
          example: Successfully logged in
        data:
          type: object
          properties:
            accessToken:
              type: string
              description: JWT access token
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            refreshToken:
              type: string
              description: JWT refresh token
              example: dGhpcyBpcyBhIHJlZnJlc2ggdG9rZW4=
          required:
            - accessToken
            - refreshToken
        timestamp:
          type: string
          format: date-time
          description: Timestamp

    ActivateRequest:
      type: object
      properties:
        token:
          type: string
          description: Activation token
          example: 123abcdsasgdsgdsgfdsgfds
        password:
          type: string
          description: New user password
          example: myStrongPassword!
      required:
        - token
        - password

    ActivateResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Success status
        message:
          type: string
          description: Response message
          example: User activated successfully
        data:
          type: object
          properties:
            message:
              type: string
              description: Response message
              example: User activated successfully
          required:
            - message
        timestamp:
          type: string
          format: date-time
          description: Timestamp

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "error"
        data:
          nullable: true
          example: null
        timestamp:
          type: string
          format: date-time
          example: "2025-06-08T19:09:05.119"

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          nullable: true
          description: "Any response data"
        timestamp:
          type: string
          format: date-time
          example: "2025-06-10T00:11:22"

security:
  - BearerAuth: []
