openapi: 3.0.1
info:
  title: Ielts platform System API
  version: "1.0"
  description: REST API for Ielts platform

servers:
  - url: https://ielts-platform-production.up.railway.app
    description: Production
  - url: http://localhost:8080
    description: Local Dev

paths:
  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: "User Login"
      description: "Authenticates the user by email and password. Returns access and refresh tokens on success."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Login successful"
                data:
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                timestamp: "2025-06-10T00:12:33"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "Email must not be blank"
                  - "Password must not be blank"
                timestamp: "2025-06-10T00:22:14"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Unauthorized"
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '409':
          description: "Conflict (Account blocked or other business conflict)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Conflict"
                message: "Account is blocked"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Internal server error"
                message: "Server error"
                data: null
                timestamp: "2025-06-09T23:55:22"

  /api/v1/auth/activate:
    post:
      tags:
        - Auth
      summary: Activate Account
      description: Activates a user account using an activation token and sets a new password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateRequest'
      responses:
        '200':
          description: "Account successfully activated"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Account successfully activated"
                data:
                  "message": "Account successfully activated"
                timestamp: "2025-06-10T00:12:33"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "Token must not be blank"
                  - "Password must not be blank"
                  - "Password must be at least 6 characters"
                timestamp: "2025-06-10T00:22:14"
        '409':
          description: Invalid or expired token (conflict)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Conflict"
                message: "Invalid token"
                data: null
                timestamp: "2025-06-09T23:59:00"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Internal Server Error"
                message: "Unexpected error"
                data: null
                timestamp: "2025-06-09T23:59:00"

  /api/v1/groups/teacher-groups:
    get:
      tags:
        - Group
      summary: Get all groups assigned to the authenticated teacher
      description: Get all groups assigned to the authenticated teacher
      responses:
        '200':
          description: List of groups belonging to the teacher
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Groups found"
                data:
                  - id: 7
                    name: "Group A"
                    courseName: "Pre-IELTS"
                    startDateTime: "2025-06-10T00:11:22"
                    endDateTime: "2025-10-10T00:11:22"
                    status: "ACTIVE"
                    teacherId: 1
                    firstName: "Anna"
                    lastName: "Alarich"
                    email: "anna@gmail.com"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Unauthorized"
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '403':
          description: Teacher role required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Forbidden"
                message: "Teacher role required"
                data: null
                timestamp: 2025-06-10T21:40:00
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: Not Found
                message:
                  Teacher profile not found: 13
                data: null
                timestamp: 2025-06-10T21:45:00
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Internal Server Error"
                message: "Unexpected error"
                data: null
                timestamp: "2025-06-09T23:59:00"

  /api/v1/groups/group/{groupId}/monthly:
    get:
      summary: Get group monthly attendance and grade report
      tags:
        - Group
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: integer
          description: Group ID
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
          description: Any date in the target month (e.g. "2025-06-01")
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      lessonDays:
                        type: array
                        items:
                          type: integer
                        description: Lesson days in month
                        example: [ 13, 16, 18, 20, 23, 25, 27, 30 ]
                      students:
                        type: array
                        items:
                          type: object
                          properties:
                            studentId:
                              type: integer
                              example: 1
                            fullName:
                              type: string
                              example: Temur G'aniyev
                            attendanceList:
                              type: array
                              items:
                                type: object
                                properties:
                                  lessonId:
                                    type: integer
                                    example: 1
                                  attendanceId:
                                    type: integer
                                    example: 1
                                  gradeId:
                                    type: integer
                                    example: 1
                                  lessonDate:
                                    type: string
                                    format: date
                                    example: 2025-06-13
                                  topic:
                                    type: string
                                    example: Auto-generated lesson for 2025-06-13
                                  present:
                                    type: boolean
                                    example: true
                                  attendanceComment:
                                    type: string
                                    example: "yes"
                                  grade:
                                    type: number
                                    format: double
                                    example: 8.04
                                  gradeComment:
                                    type: string
                                    example: "Fake baho: 8,0"
                                  lessonStartTime:
                                    type: string
                                    format: time
                                    example: "09:00:00"
                                  lessonEndTime:
                                    type: string
                                    format: time
                                    example: "10:30:00"
              examples:
                application/json:
                  value:
                    success: true
                    message: success
                    data:
                      lessonDays: [ 13, 16, 18, 20, 23, 25, 27, 30 ]
                      students:
                        - studentId: 1
                          fullName: "Temur G'aniyev"
                          attendanceList:
                            - lessonId: 1
                              attendanceId: 1
                              gradeId: 1
                              lessonDate: "2025-06-13"
                              topic: "Auto-generated lesson for 2025-06-13"
                              present: true
                              attendanceComment: "yes"
                              grade: 8.04
                              gradeComment: "Fake baho: 8,0"
                              lessonStartTime: "09:00:00"
                              lessonEndTime: "10:30:00"
                            - lessonId: 2
                              attendanceId: 3
                              gradeId: 3
                              lessonDate: "2025-06-16"
                              topic: "Auto-generated lesson for 2025-06-16"
                              present: true
                              attendanceComment: "yes"
                              grade: 8.7
                              gradeComment: "Fake baho: 8,7"
                              lessonStartTime: "09:00:00"
                              lessonEndTime: "10:30:00"
                        - studentId: 2
                          fullName: "Javohir Jamolov"
                          attendanceList:
                            - lessonId: 1
                              attendanceId: 2
                              gradeId: 2
                              lessonDate: "2025-06-13"
                              topic: "Auto-generated lesson for 2025-06-13"
                              present: true
                              attendanceComment: "yes"
                              grade: 7.95
                              gradeComment: "Fake baho: 8,0"
                              lessonStartTime: "09:00:00"
                              lessonEndTime: "10:30:00"
                            - lessonId: 2
                              attendanceId: 4
                              gradeId: 4
                              lessonDate: "2025-06-16"
                              topic: "Auto-generated lesson for 2025-06-16"
                              present: false
                              attendanceComment: "not"
                              grade: 7.28
                              gradeComment: "Fake baho: 7,3"
                              lessonStartTime: "09:00:00"
                              lessonEndTime: "10:30:00"
        '400':
          description: Invalid input or bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    nullable: true
                  timestamp:
                    type: string
                    format: date-time
              example:
                success: false
                message: "Invalid date format: expected yyyy-MM-dd"
                data: null
                timestamp: "2025-06-13T14:25:33.123456"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Unauthorized"
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '403':
            description: Forbidden – Teacher role required
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    data:
                      nullable: true
                    timestamp:
                      type: string
                      format: date-time
                example:
                  success: false
                  message: "Teacher role required"
                  data: null
                  timestamp: "2025-06-13T14:26:45.789012"
        '404':
            description: Not Found – Group not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    data:
                      nullable: true
                    timestamp:
                      type: string
                      format: date-time
                example:
                  success: false
                  message: "Group not found"
                  data: null
                  timestamp: "2025-06-13T14:27:01.654321"
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    data:
                      nullable: true
                    timestamp:
                      type: string
                      format: date-time
                example:
                  success: false
                  message: "Internal Server Error"
                  data: null
                  timestamp: "2025-06-13T14:27:30.789456"

  /api/v1/attendance/{id}/mark:
    patch:
      summary: Mark attendance by ID
      tags:
        - Attendance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the attendance record
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceMarkRequest'
      responses:
        '200':
          description: Attendance marked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "success"
                data:
                  message: "Attendance marked successfully"
                timestamp: "2025-06-10T00:12:33"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "Present must not be null"
                  - "Comment must not be blank"
                timestamp: "2025-06-10T00:22:14"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Unauthorized"
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '404':
          description: "Attendance not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Not Found"
                message: "Attendance not found"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '409':
          description: "Conflict (Attendance is archived)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Conflict"
                message: "Attendance is archived"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Internal server error"
                message: "Server error"
                data: null
                timestamp: "2025-06-09T23:55:22"

  /api/v1/grade/{id}/mark:
    patch:
      tags:
        - Grade
      summary: Mark grade for a student
      description: Allows a teacher to mark or update a student's grade for a specific attendance
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the grade to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeMarkRequest'
            examples:
              validRequest:
                summary: Valid request example
                value:
                  attendanceId: 1
                  score: 8.5
                  gradeComment: "Very attentive and active"
      responses:
        '200':
          description: Grade marked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Successfully marked grade"
                data:
                  message: "Successfully marked grade"
                timestamp: "2025-06-10T00:12:33"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "attendanceId must not be null"
                  - "score must not be null"
                timestamp: "2025-06-10T00:22:14"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                message: "Teacher Profile Not Found"
                data: null
                timestamp: "2025-06-16T15:23:45"
        '409':
          description: Conflict / Access denied / Invalid state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                message: "Attendance is archived"
                data: null
                timestamp: "2025-06-16T15:23:45"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Internal server error"
                message: "Server error"
                data: null
                timestamp: "2025-06-09T23:55:22"

  /api/v1/teacher-profile/me:
    get:
      tags:
        - Teacher
      summary: Get teacher profile info
      description: Get teacher profile info
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "success"
                data:
                  id: 1
                  firstName: Oybek
                  lastName: Hamroyev
                  email: oybek@gamil.com
                timestamp: "2025-06-10T00:12:33"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                message: "Unauthorized (Invalid credentials)"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '404':
          description: Teacher Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                message: "Teacher Profile not found"
                data: null
                timestamp: "2025-06-16T15:23:45"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                message: "Internal server error"
                data: null
                timestamp: "2025-06-09T23:55:22"

  /api/v1/device:
    get:
      summary: Get User-Agent header (device info)
      description: Returns the User-Agent header string sent by the client. Can be used to identify device or browser.
      tags:
        - Device
      parameters:
        - name: User-Agent
          in: header
          required: true
          schema:
            type: string
            example: User-Agent
          description: The User-Agent header containing device/browser info
      responses:
        '200':
          description: The User-Agent string sent by the client
          content:
            text/plain:
              schema:
                type: string
                example: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36
        '400':
          description: Bad request (missing User-Agent header)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User-Agent header is missing"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-06-21T11:38:00"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-06-21T11:38:00"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: User email
          example: oybek@gmail.com
        password:
          type: string
          description: User password
          example: 123456
      required:
        - email
        - password

    GradeMarkRequest:
      type: object
      required:
        - attendanceId
        - score
      properties:
        attendanceId:
          type: integer
          example: 45
          description: ID of the attendance this grade is associated with
        score:
          type: number
          format: double
          example: 9.0
          description: Grade score (e.g., from 0.0 to 10.0)
        gradeComment:
          type: string
          example: "Well done"
          description: Optional comment about the student's performance

    ActivateRequest:
      type: object
      properties:
        token:
          type: string
          description: Activation token
          example: 123abcdsasgdsgdsgfdsgfds
        password:
          type: string
          description: New user password
          example: myStrongPassword!
      required:
        - token
        - password

    AttendanceMarkRequest:
      type: object
      properties:
        present:
          type: boolean
          description: Whether the student was present or not
        comment:
          type: string
          description: Optional comment about the attendance
      required:
        - present

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          nullable: true
          description: "Any response data"
        timestamp:
          type: string
          format: date-time
          example: "2025-06-10T00:11:22"

security:
  - BearerAuth: []
