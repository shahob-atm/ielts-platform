openapi: 3.0.1
info:
  title: Ielts platform System API
  version: "1.0"
  description: REST API for Ielts platform

servers:
  - url: https://ielts-platform-production.up.railway.app
    description: Production
  - url: http://localhost:8080
    description: Local Dev

paths:
  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: "User Login"
      description: "Authenticates the user by email and password. Returns access and refresh tokens on success."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Login successful"
                data:
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                timestamp: "2025-06-10T00:12:33"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "Email must not be blank"
                  - "Password must not be blank"
                timestamp: "2025-06-10T00:22:14"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Unauthorized"
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '409':
          description: "Conflict (Account blocked or other business conflict)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Conflict"
                message: "Account is blocked"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Internal server error"
                message: "Server error"
                data: null
                timestamp: "2025-06-09T23:55:22"

  /api/v1/auth/register-parent:
    post:
      tags:
        - Auth
      summary: "Register a new parent"
      description: "Register a new parent"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentRegistrationRequest'
      responses:
        '200':
          description: "Parent registered successfully"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Parent registered successfully"
                data:
                  message: "Parent registered successfully"
                timestamp: "2025-06-10T00:25:12"
        '409':
          description: "Email already exists"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Email already exists"
                data: null
                timestamp: "2025-06-10T00:25:16"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "firstName is required"
                  - "lastName is required"
                  - "email is required"
                  - "password is required"
                timestamp: "2025-06-10T00:22:14"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Failed to send activation email"
                data: null
                timestamp: "2025-06-10T00:25:25"

  /api/v1/auth/parent-activate:
    get:
      tags:
        - Auth
      summary: "Activate parent account by token"
      parameters:
        - in: query
          name: token
          schema:
            type: string
          required: true
          description: "Activation token sent to parent's email"
      responses:
        '200':
          description: "Parent activated successfully"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Parent activated successfully"
                data:
                  message: "Parent activated successfully"
                timestamp: "2025-06-10T00:27:30"
        '409':
          description: "Invalid or expired token"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              examples:
                invalidToken:
                  summary: "Token is invalid"
                  value:
                    success: false
                    message: "Invalid token"
                    data: null
                    timestamp: "2025-06-10T00:27:32"
                tokenExpired:
                  summary: "Token expired"
                  value:
                    success: false
                    message: "Token expired"
                    data: null
                    timestamp: "2025-06-10T00:27:36"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "Token must not be blank"
                timestamp: "2025-06-10T00:22:14"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Unexpected error"
                data: null
                timestamp: "2025-06-10T00:27:42"

  /api/v1/parents/children/invite:
    post:
      tags:
        - Parents
      summary: "Invite a child (parent invites their child by email)"
      description: "Invite a child (parent invites their child by email)"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                childEmail:
                  type: string
                  format: email
                  description: "Child's email address"
              required:
                - childEmail
      responses:
        '200':
          description: "Invitation sent to child"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Invitation sent to child"
                data:
                  message: "Invitation sent to child"
                timestamp: "2025-06-10T00:40:00"
        '401':
          description: "Unauthorized (not authenticated or invalid token)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:44:40"
        '404':
          description: "Parent or child not found"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              examples:
                parentNotFound:
                  summary: "Parent not found"
                  value:
                    success: false
                    message: "Parent user not found"
                    data: null
                    timestamp: "2025-06-10T00:40:04"
                childNotFound:
                  summary: "Child not found"
                  value:
                    success: false
                    message: "Child user not found"
                    data: null
                    timestamp: "2025-06-10T00:40:07"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "childEmail can not be blank"
                timestamp: "2025-06-10T00:22:14"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Unexpected error"
                data: null
                timestamp: "2025-06-10T00:40:16"

  /api/v1/parents/me/children:
    get:
      tags:
        - Parents
      summary: "Get the list of children (students) for the authenticated parent"
      description: "Get the list of children (students) for the authenticated parent"
      responses:
        '200':
          description: "List of students belonging to the parent"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                  success: true
                  message: Children found
                  data:
                    - id: 7
                      firstName: John
                      lastName: Smith
                      email: john.smith@gmail.com
                      createdAt: 2025-06-01T12:00:00
                      updatedAt: 2025-06-08T12:00:00
                    - id: 9
                      firstName: Alice
                      lastName: Doe
                      email: alice.doe@gmail.com
                      createdAt: 2025-06-02T15:30:00
                      updatedAt: 2025-06-09T10:00:00
                  timestamp: 2025-06-10T19:53:37.495238
        '401':
          description: "Unauthorized (not authenticated or invalid token)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:44:40"
        '403':
          description: "Parent role required"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Parent role required"
                data: null
                timestamp: "2025-06-10T00:44:40"
        '404':
          description: "Parent not found or parent profile does not exist"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Parent not found or parent profile does not exist"
                data: null
                timestamp: "2025-06-10T00:44:40"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        nullable: true
              example:
                success: false
                message: "Unexpected error"
                data: null
                timestamp: "2025-06-10T00:40:16"

  /api/v1/parents/{childId}/{groupId}/attendances:
    get:
      summary: Get attendances and grades of a child by parent
      description: Returns the list of attendance and grades for the given child and group, accessible only for parents.
      tags:
        - Parents
      parameters:
        - name: childId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the child (student)
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the group
      responses:
        '200':
          description: List of attendances and grades for the child
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    message: success
                    data:
                      - attendanceId: 1
                        firstName: Temur
                        lastName: G'aniyev
                        present: true
                        comment: "Attended"
                        archived: false
                        date: "2024-06-17"
                        topic: "Grammar lesson"
                        gradeComment: "Good"
                        gradeScore: 8.5
                      - attendanceId: 2
                        firstName: Temur
                        lastName: G'aniyev
                        present: false
                        comment: "Absent"
                        archived: false
                        date: "2024-06-19"
                        topic: "Reading"
                        gradeComment: "No grade"
                        gradeScore: null
                    timestamp: "2024-06-21T10:15:30"
        '400':
          description: Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                invalidChildId:
                  value:
                    success: false
                    message: Invalid childId parameter
                    data:
                      message: "childId must be not null"
                    timestamp: "2024-06-21T10:15:30"
                invalidGroupId:
                  value:
                    success: false
                    message: Invalid groupId parameter
                    data:
                      message: "groupId must be not null"
                    timestamp: "2024-06-21T10:15:30"
        '401':
          description: Unauthorized (no or invalid JWT token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                unauthorized:
                  value:
                    success: false
                    message: Unauthorized
                    data: null
                    timestamp: "2024-06-21T10:15:30"
        '403':
          description: Forbidden (no permission to access this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                forbidden:
                  value:
                    success: false
                    message: Forbidden
                    data: null
                    timestamp: "2024-06-21T10:15:30"
        '404':
          description: Not found (parent, child, or attendance not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                parentNotFound:
                  value:
                    success: false
                    message: Parent profile not found parent@gmail.com
                    data: null
                    timestamp: "2024-06-21T10:15:30"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                serverError:
                  value:
                    success: false
                    message: Internal server error
                    data: null
                    timestamp: "2024-06-21T10:15:30"

  /api/v1/parents/{childId}/groups:
    get:
      summary: Get active groups of a parent's child
      description: Returns the list of active groups for the given child. Only accessible by a parent.
      tags:
        - Parents
      parameters:
        - name: childId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the child (student)
      responses:
        '200':
          description: List of active groups for the child
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    message: success
                    data:
                      - id: 10
                        name: IELTS 6.0 Morning
                        courseName: IELTS General
                        startDateTime: "2024-01-20T09:00:00"
                        endDateTime: "2024-06-20T10:30:00"
                        status: ACTIVE
                        teacherId: 14
                        firstName: Oybek
                        lastName: Hamroyev
                        email: oybek@gmail.com
                      - id: 12
                        name: Pre-IELTS
                        courseName: Pre-IELTS
                        startDateTime: "2024-03-10T08:00:00"
                        endDateTime: "2024-07-10T09:30:00"
                        status: ACTIVE
                        teacherId: 17
                        firstName: Azizbek
                        lastName: Ravshanovich
                        email: azizbek@gmail.com
                    timestamp: "2024-06-21T11:15:30"
        '400':
          description: Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                invalidChildId:
                  value:
                    success: false
                    message: Invalid childId parameter
                    data:
                      message: "childId must be not null"
                    timestamp: "2024-06-21T11:15:30"
        '401':
          description: Unauthorized (no or invalid JWT token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                unauthorized:
                  value:
                    success: false
                    message: Unauthorized
                    data: null
                    timestamp: "2024-06-21T11:15:30"
        '403':
          description: Forbidden (no permission to access this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                forbidden:
                  value:
                    success: false
                    message: Forbidden
                    data: null
                    timestamp: "2024-06-21T11:15:30"
        '404':
          description: Not found (parent, child, or student profile not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                parentNotFound:
                  value:
                    success: false
                    message: "Parent profile not found parent@gmail.com"
                    data: null
                    timestamp: "2024-06-21T11:15:30"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                serverError:
                  value:
                    success: false
                    message: Internal server error
                    data: null
                    timestamp: "2024-06-21T11:15:30"

  /api/v1/device:
    get:
      summary: Get User-Agent header (device info)
      description: Returns the User-Agent header string sent by the client. Can be used to identify device or browser.
      tags:
        - Device
      parameters:
        - name: User-Agent
          in: header
          required: true
          schema:
            type: string
            example: User-Agent
          description: The User-Agent header containing device/browser info
      responses:
        '200':
          description: The User-Agent string sent by the client
          content:
            text/plain:
              schema:
                type: string
                example: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36
        '400':
          description: Bad request (missing User-Agent header)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User-Agent header is missing"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-06-21T11:38:00"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-06-21T11:38:00"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: User email
          example: johndoe@gmail.com
        password:
          type: string
          description: User password
          example: 123456
      required:
        - email
        - password

    ParentRegistrationRequest:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
      properties:
        firstName:
          type: string
          description: Parent's first name
          example: Dilshod
        lastName:
          type: string
          description: Parent's last name
          example: Jo'rayev
        email:
          type: string
          format: email
          description: Parent's email address
          example: dilshod@gmail.com
        password:
          type: string
          description: Parent's password
          example: 1234567

    InviteChildRequest:
      type: object
      properties:
        childEmail:
          type: string
          format: email
          example: student@example.com
      required:
        - childEmail

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          nullable: true
          description: "Any response data"
        timestamp:
          type: string
          format: date-time
          example: "2025-06-10T00:11:22"

security:
  - BearerAuth: []
