openapi: 3.0.1
info:
  title: Ielts platform System API
  version: "1.0"
  description: REST API for Ielts platform

servers:
  - url: https://ielts-platform-production.up.railway.app
    description: Production
  - url: http://localhost:8080
    description: Local Dev

paths:
  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: "User Login"
      description: "Authenticates the user by email and password. Returns access and refresh tokens on success."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Login successful"
                data:
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                timestamp: "2025-06-10T00:12:33"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "Email must not be blank"
                  - "Password must not be blank"
                timestamp: "2025-06-10T00:22:14"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Unauthorized"
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '409':
          description: "Conflict (Account blocked or other business conflict)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Conflict"
                message: "Account is blocked"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                error: "Internal server error"
                message: "Server error"
                data: null
                timestamp: "2025-06-09T23:55:22"

  /api/v1/users/invite:
    post:
      tags:
        - Users
      summary: "Invite a new user"
      description: "Invite a new user (student or teacher)"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserRequest'
      responses:
        '200':
          description: "User invited successfully"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "User invited successfully"
                data:
                  message: "User Invited Successfully"
                timestamp: "2025-06-10T00:22:10"
        '409':
          description: "Email already exists"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                message: "Email already exists"
                data: null
                timestamp: "2025-06-10T00:22:12"
        '400':
          description: "Bad Request (Validation error)"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                        nullable: true
              example:
                success: false
                message: "Validation failure"
                data:
                  - "First name must not be blank"
                  - "Last name must not be blank"
                  - "Email must not be blank"
                  - "Role must not be null"
                  - "Role must be STUDENT or TEACHER"
                timestamp: "2025-06-10T00:22:14"
        '401':
          description: "Unauthorized (Invalid credentials)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                status: false
                error: "Unauthorized"
                message: "Authentication required"
                data: null
                timestamp: "2025-06-10T00:02:22"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: false
                message: "Failed to send invitation email"
                data: null
                timestamp: "2025-06-10T00:22:15"

  /api/v1/device:
    get:
      summary: Get User-Agent header (device info)
      description: Returns the User-Agent header string sent by the client. Can be used to identify device or browser.
      tags:
        - Device
      parameters:
        - name: User-Agent
          in: header
          required: true
          schema:
            type: string
            example: User-Agent
          description: The User-Agent header containing device/browser info
      responses:
        '200':
          description: The User-Agent string sent by the client
          content:
            text/plain:
              schema:
                type: string
                example: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36
        '400':
          description: Bad request (missing User-Agent header)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User-Agent header is missing"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-06-21T11:38:00"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-06-21T11:38:00"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: User email
          example: johndoe@gmail.com
        password:
          type: string
          description: User password
          example: 123456
      required:
        - email
        - password

    InviteUserRequest:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name
          example: Ali
        lastName:
          type: string
          description: User's last name
          example: Doyi
        email:
          type: string
          description: User's email address
          example: ali@gmail.com
        role:
          type: string
          enum: [ STUDENT, TEACHER ]
          description: "Role (only STUDENT or TEACHER allowed)"
          example: STUDENT
      required:
        - firstName
        - lastName
        - email
        - role

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          nullable: true
          description: "Any response data"
        timestamp:
          type: string
          format: date-time
          example: "2025-06-10T00:11:22"

security:
  - BearerAuth: []
